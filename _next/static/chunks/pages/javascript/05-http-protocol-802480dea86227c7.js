(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6794],{1129:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/javascript/05-http-protocol",function(){return t(9641)}])},9641:function(e,n,t){"use strict";t.r(n),t.d(n,{__toc:function(){return d}});var r=t(5893),s=t(2673),o=t(5818),a=t(2337);t(9488);var i=t(2643);let d=[{depth:2,value:"HTTP and TCP",id:"http-and-tcp"},{depth:2,value:"Headers",id:"headers"},{depth:2,value:"Payload",id:"payload"},{depth:2,value:"Structure of Requests and Responses",id:"structure-of-requests-and-responses"},{depth:2,value:"HTTP Methods",id:"http-methods"},{depth:2,value:"Request Headers",id:"request-headers"},{depth:2,value:"Response Components",id:"response-components"}];function c(e){let n=Object.assign({h1:"h1",h2:"h2",p:"p",ul:"ul",li:"li",ol:"ol",strong:"strong",code:"code"},(0,i.a)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"HTTP Protocol"}),"\n",(0,r.jsx)(n.h2,{id:"http-and-tcp",children:"HTTP and TCP"}),"\n",(0,r.jsx)(n.p,{children:"HTTP is an application layer protocol on top of TCP."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HTTP (HyperText Transfer Protocol) operates at the application layer of the OSI model, relying on TCP (Transmission Control Protocol) for the reliable delivery of data. It is the foundation of any data exchange on the Web and a protocol used for transmitting hypermedia documents, such as HTML."}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"headers",children:"Headers"}),"\n",(0,r.jsx)(n.p,{children:"Headers enable passing additional information in requests/responses."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HTTP headers are key-value pairs sent in both HTTP requests and responses. They provide essential metadata about the request or response, such as content type, length, encoding, and server details. Headers help in controlling cache, specifying cookies, defining content types, and much more."}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"payload",children:"Payload"}),"\n",(0,r.jsx)(n.p,{children:"Payload content, like raw HTML, is sent in the message body."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The HTTP message body contains the actual data being transmitted between the client and server. For a request, this might include form data or JSON objects. For a response, it might contain HTML, images, JSON, or other types of data that the server sends to the client."}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"structure-of-requests-and-responses",children:"Structure of Requests and Responses"}),"\n",(0,r.jsx)(n.p,{children:"Requests and responses have a similar structure with start-line, headers, and body."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Request Structure:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start-Line"}),": Contains the HTTP method, request target (URL), and HTTP version (e.g., ",(0,r.jsx)(n.code,{children:"GET /index.html HTTP/1.1"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),": Provide additional information like ",(0,r.jsx)(n.code,{children:"Host"}),", ",(0,r.jsx)(n.code,{children:"User-Agent"}),", ",(0,r.jsx)(n.code,{children:"Accept"}),", etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Body"}),": Optional part where data is sent (e.g., form data in a POST request)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Response Structure:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start-Line"}),": Contains the HTTP version, status code, and reason phrase (e.g., ",(0,r.jsx)(n.code,{children:"HTTP/1.1 200 OK"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),": Provide metadata such as Content-Type, Content-Length, Set-Cookie, etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Body"}),": Contains the response data, like the HTML of a webpage or JSON data from an API."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,r.jsx)(n.p,{children:"HTTP methods like GET, POST, PUT, etc., define actions in requests."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GET"}),": Requests a representation of the specified resource. Should not change server state."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"POST"}),": Submits data to be processed to a specified resource, often causing a change in server state."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PUT"}),": Uploads a representation of the specified resource, typically updating existing data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DELETE"}),": Removes the specified resource."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PATCH"}),": Partially updates a specified resource."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HEAD"}),": Similar to GET but only requests the headers and status line, not the body."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OPTIONS"}),": Describes the communication options for the target resource."]}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"request-headers",children:"Request Headers"}),"\n",(0,r.jsx)(n.p,{children:"Request headers modify the request, provide context, or restrict it. Common Request Headers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Host:"})," Specifies the domain name of the server."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"User-Agent:"})," Provides information about the client software."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Accept:"})," Informs the server about the types of data the client can process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Authorization:"})," Contains credentials for authenticating the client with the server."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Content-Type:"})," Indicates the media type of the request body (e.g., application/json)."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"response-components",children:"Response Components"}),"\n",(0,r.jsx)(n.p,{children:"Responses include status codes, headers, and a body."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Status Codes:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1xx (Informational): Request received, continuing process."}),"\n",(0,r.jsx)(n.li,{children:"2xx (Success): The action was successfully received, understood, and accepted (e.g., 200 OK, 201 Created)."}),"\n",(0,r.jsx)(n.li,{children:"3xx (Redirection): Further action needs to be taken to complete the request (e.g., 301 Moved Permanently, 302 Found)."}),"\n",(0,r.jsx)(n.li,{children:"4xx (Client Error): The request contains bad syntax or cannot be fulfilled (e.g., 400 Bad Request, 404 Not Found)."}),"\n",(0,r.jsx)(n.li,{children:"5xx (Server Error): The server failed to fulfill a valid request (e.g., 500 Internal Server Error, 503 Service Unavailable)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Response Headers:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Similar to request headers, they provide additional context about the response (e.g., ",(0,r.jsx)(n.code,{children:"Content-Type"}),", ",(0,r.jsx)(n.code,{children:"Set-Cookie"}),", ",(0,r.jsx)(n.code,{children:"Cache-Control"}),")."]}),"\n"]}),"\n"]}),"\n"]})]})}let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.a)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/javascript/05-http-protocol.mdx",route:"/javascript/05-http-protocol",pageMap:[{kind:"Meta",data:{index:"Introduction",c:"C",cpp:"C++",javascript:"JavaScript",react:"React","js-challenge":"JS-Challenge",leetcode:"Leetcode","error-notes":"Error Notes",about:{title:"About",type:"page"}}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"Folder",name:"c",route:"/c",children:[{kind:"MdxPage",name:"01-basics",route:"/c/01-basics"},{kind:"MdxPage",name:"02-types",route:"/c/02-types"},{kind:"MdxPage",name:"03-simple-calculation",route:"/c/03-simple-calculation"},{kind:"MdxPage",name:"04-expression",route:"/c/04-expression"},{kind:"MdxPage",name:"05-logic",route:"/c/05-logic"},{kind:"MdxPage",name:"06-array",route:"/c/06-array"},{kind:"MdxPage",name:"07-structures",route:"/c/07-structures"},{kind:"MdxPage",name:"08-function",route:"/c/08-function"},{kind:"MdxPage",name:"09-pointer",route:"/c/09-pointer"},{kind:"Meta",data:{"01-basics":"01-Basics","02-types":"02-Types","03-simple-calculation":"03-Simple Calculation","04-expression":"04-Expression","05-logic":"05-Logic","06-array":"06-Array","07-structures":"07-Structures","08-function":"08-Function","09-pointer":"09-Pointer"}}]},{kind:"Folder",name:"cpp",route:"/cpp",children:[{kind:"MdxPage",name:"01-basics",route:"/cpp/01-basics"},{kind:"MdxPage",name:"02-foundations",route:"/cpp/02-foundations"},{kind:"MdxPage",name:"03-dynamic-memory",route:"/cpp/03-dynamic-memory"},{kind:"MdxPage",name:"04-encapsulation",route:"/cpp/04-encapsulation"},{kind:"MdxPage",name:"05-inheritance",route:"/cpp/05-inheritance"},{kind:"MdxPage",name:"06-polymorphism",route:"/cpp/06-polymorphism"},{kind:"Meta",data:{"01-basics":"01-Basics","02-foundations":"02-Foundations","03-dynamic-memory":"03-Dynamic Memory","04-encapsulation":"04-Encapsulation","05-inheritance":"05-Inheritance","06-polymorphism":"06-Polymorphism"}}]},{kind:"Folder",name:"error-notes",route:"/error-notes",children:[{kind:"Folder",name:"C",route:"/error-notes/C",children:[{kind:"MdxPage",name:"01-scanf",route:"/error-notes/C/01-scanf"},{kind:"Meta",data:{"01-scanf":"01-scanf"}}]},{kind:"Meta",data:{C:"C",cpp:"C++"}},{kind:"Folder",name:"cpp",route:"/error-notes/cpp",children:[{kind:"MdxPage",name:"01-Wsign-compare",route:"/error-notes/cpp/01-Wsign-compare"},{kind:"MdxPage",name:"02-Wreorder-warning",route:"/error-notes/cpp/02-Wreorder-warning"},{kind:"MdxPage",name:"03-segmentation-fault",route:"/error-notes/cpp/03-segmentation-fault"},{kind:"MdxPage",name:"04-memory-leak",route:"/error-notes/cpp/04-memory-leak"},{kind:"MdxPage",name:"05-linker-error",route:"/error-notes/cpp/05-linker-error"},{kind:"Meta",data:{"01-Wsign-compare":"01-Wsign-compare","02-Wreorder-warning":"02-Wreorder-warning","03-segmentation-fault":"03-segmentation-fault","04-memory-leak":"04-memory-leak","05-linker-error":"05-linker-error"}}]}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"javascript",route:"/javascript",children:[{kind:"MdxPage",name:"01-object-oriented-javascript",route:"/javascript/01-object-oriented-javascript"},{kind:"MdxPage",name:"02-modern-syntax",route:"/javascript/02-modern-syntax"},{kind:"MdxPage",name:"03-callback",route:"/javascript/03-callback"},{kind:"MdxPage",name:"04-promise",route:"/javascript/04-promise"},{kind:"MdxPage",name:"05-http-protocol",route:"/javascript/05-http-protocol"},{kind:"Meta",data:{"01-object-oriented-javascript":"01-Object Oriented JavaScript","02-modern-syntax":"02-Modern Syntax","03-callback":"03-Callback","04-promise":"04-Promise","05-http-protocol":"05 HTTP Protocol"}}]},{kind:"Folder",name:"js-challenge",route:"/js-challenge",children:[{kind:"MdxPage",name:"01-addition-of-fractions",route:"/js-challenge/01-addition-of-fractions"},{kind:"Meta",data:{"01-addition-of-fractions":"01-Addition of Fractions"}}]},{kind:"Folder",name:"leetcode",route:"/leetcode",children:[{kind:"MdxPage",name:"1004-max-consecutive-ones-iii",route:"/leetcode/1004-max-consecutive-ones-iii"},{kind:"MdxPage",name:"1071-greatest-common-divisor-of-strings",route:"/leetcode/1071-greatest-common-divisor-of-strings"},{kind:"MdxPage",name:"11-container-with-most-water",route:"/leetcode/11-container-with-most-water"},{kind:"MdxPage",name:"1431-kids-with-the-greatest-number-of-candies",route:"/leetcode/1431-kids-with-the-greatest-number-of-candies"},{kind:"MdxPage",name:"1456-maximum-number-of-vowels-in-a-substring-of-given-length",route:"/leetcode/1456-maximum-number-of-vowels-in-a-substring-of-given-length"},{kind:"MdxPage",name:"1493-longest-subarray-of-1s-after-deleting-one-element",route:"/leetcode/1493-longest-subarray-of-1s-after-deleting-one-element"},{kind:"MdxPage",name:"151-reverse-words-in-a-string",route:"/leetcode/151-reverse-words-in-a-string"},{kind:"MdxPage",name:"1679-max-number-of-k-sum-pairs",route:"/leetcode/1679-max-number-of-k-sum-pairs"},{kind:"MdxPage",name:"1768-merge-strings-alternately",route:"/leetcode/1768-merge-strings-alternately"},{kind:"MdxPage",name:"238-product-of-array-except-self",route:"/leetcode/238-product-of-array-except-self"},{kind:"MdxPage",name:"283-move-zeroes",route:"/leetcode/283-move-zeroes"},{kind:"MdxPage",name:"334-increasing-triplet-subsequence",route:"/leetcode/334-increasing-triplet-subsequence"},{kind:"MdxPage",name:"345-reverse-vowels-of-a-string",route:"/leetcode/345-reverse-vowels-of-a-string"},{kind:"MdxPage",name:"392-is-subsequence",route:"/leetcode/392-is-subsequence"},{kind:"MdxPage",name:"443-string-compression",route:"/leetcode/443-string-compression"},{kind:"MdxPage",name:"605-can-place-flowers",route:"/leetcode/605-can-place-flowers"},{kind:"MdxPage",name:"643-maximum-average-subarray-i",route:"/leetcode/643-maximum-average-subarray-i"},{kind:"Meta",data:{"11-container-with-most-water":"11. Container With Most Water","151-reverse-words-in-a-string":"151. Reverse Words in a String","238-product-of-array-except-self":"238. Product of Array Except Self","283-move-zeroes":"283. Move Zeroes","334-increasing-triplet-subsequence":"334. Increasing Triplet Subsequence","345-reverse-vowels-of-a-string":"345. Reverse Vowels of a String","392-is-subsequence":"392. Is Subsequence","443-string-compression":"443. String Compression","605-can-place-flowers":"605. Can Place Flowers","643-maximum-average-subarray-i":"643. Maximum Average Subarray I","1004-max-consecutive-ones-iii":"1004. Max Consecutive Ones III","1071-greatest-common-divisor-of-strings":"1071. Greatest Common Divisor of Strings","1431-kids-with-the-greatest-number-of-candies":"1431. Kids With the Greatest Number of Candies","1456-maximum-number-of-vowels-in-a-substring-of-given-length":"1456. Maximum Number of Vowels in a Substring of Given Length","1493-longest-subarray-of-1s-after-deleting-one-element":"1493. Longest Subarray of 1's After Deleting One Element","1679-max-number-of-k-sum-pairs":"1679. Max Number of K-Sum Pairs","1768-merge-strings-alternately":"1768. Merge Strings Alternately"}}]},{kind:"Folder",name:"react",route:"/react",children:[{kind:"MdxPage",name:"01-attribute-conversion",route:"/react/01-attribute-conversion"},{kind:"Meta",data:{"01-attribute-conversion":"01-Attribute Conversion"}}]}],flexsearch:{codeblocks:!0},title:"HTTP Protocol",headings:d},pageNextRoute:"/javascript/05-http-protocol",nextraLayout:o.ZP,themeConfig:a.Z};n.default=(0,s.j)(l)},2337:function(e,n,t){"use strict";t.d(n,{Z:function(){return o}});var r=t(5893);t(7294);var s=t(1163),o={logo:(0,r.jsx)("span",{children:"b5h22's Dev Notes"}),project:{link:"https://github.com/b5h22/dev-notes"},docsRepositoryBase:"https://github.com/b5h22/dev-notes/tree/main",footer:{text:"\xa9 2023 - b5h22 Powered by Nextra, Github Pages"},feedback:{content:()=>(0,r.jsx)(r.Fragment,{children:"Question? Give me feedback →"}),labels:"feedback"},useNextSeoProps:function(){let{route:e}=(0,s.useRouter)(),n={description:"The notes from my journey in learning software development."};return"/"!==e?n.titleTemplate="%s – Dev notes":n.titleTemplate="%s",n},sidebar:{defaultMenuCollapseLevel:1}}}},function(e){e.O(0,[2802,2888,9774,179],function(){return e(e.s=1129)}),_N_E=e.O()}]);